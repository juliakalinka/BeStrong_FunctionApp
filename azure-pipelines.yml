trigger:
  branches:
    include:
    - main
    - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.9'
  functionAppNameProd: 'prodbestrongfuncapp1'
  functionAppNameDev: 'devbestrongfuncapp1'
  resourceGroupProd: 'rg-prod'
  resourceGroupDev: 'rg-dev'

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target .python_packages/lib/site-packages
      displayName: 'Install dependencies'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
        verbose: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: DeployDev
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:
  - deployment: DeployToDev
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Deploy Azure Function'
            inputs:
              azureSubscription: 'bestrong-arm'
              appType: 'functionApp'
              appName: '$(functionAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'PYTHON|3.9'

          - task: AzureCLI@2
            displayName: 'Configure App Settings'
            inputs:
              azureSubscription: 'bestrong-arm'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az functionapp config appsettings set \
                  --name $(functionAppNameDev) \
                  --resource-group $(resourceGroupDev) \
                  --settings \
                    FUNCTIONS_WORKER_RUNTIME=python \
                    WEBSITE_RUN_FROM_PACKAGE=1 \
                    FileShareConnectionString="$(FileShareConnectionString)" \
                    FormRecognizerEndpoint="$(FormRecognizerEndpoint)" \
                    FormRecognizerKey="$(FormRecognizerKey)" \
                    BlobStorageConnectionString="$(BlobStorageConnectionString)" \
                    DiscordWebhookUrl="$(DiscordWebhookUrl)" \
                    SlackWebhookUrl="$(SlackWebhookUrl)"

- stage: DeployProd
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProd
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Deploy Azure Function'
            inputs:
              azureSubscription: 'bestrong-arm'
              appType: 'functionApp'
              appName: '$(functionAppNameProd)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'PYTHON|3.9'

          - task: AzureCLI@2
            displayName: 'Configure App Settings'
            inputs:
              azureSubscription: 'bestrong-arm'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az functionapp config appsettings set \
                  --name $(functionAppNameProd) \
                  --resource-group $(resourceGroupProd) \
                  --settings \
                    FUNCTIONS_WORKER_RUNTIME=python \
                    WEBSITE_RUN_FROM_PACKAGE=1 \
                    FileShareConnectionString="$(FileShareConnectionString)" \
                    FormRecognizerEndpoint="$(FormRecognizerEndpoint)" \
                    FormRecognizerKey="$(FormRecognizerKey)" \
                    BlobStorageConnectionString="$(BlobStorageConnectionString)" \
                    DiscordWebhookUrl="$(DiscordWebhookUrl)" \
                    SlackWebhookUrl="$(SlackWebhookUrl)" 