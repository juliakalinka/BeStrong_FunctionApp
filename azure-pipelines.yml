trigger:
  branches:
    include:
    - main

  paths:
    include:
    - '**/*.py'
    - 'requirements.txt'
    - 'host.json'
    - 'local.settings.json'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: pythonVersion
    value: '3.9'
  - name: functionAppName
    value: 'prodbestrongfuncapp1'

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProduction
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'bestrong-arm'
              appName: '$(functionAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
              appSettings: |
                FileShareConnectionString=$(FileShareConnectionString)
                FormRecognizerEndpoint=$(FormRecognizerEndpoint)
                FormRecognizerKey=$(FormRecognizerKey)
                BlobStorageConnectionString=$(BlobStorageConnectionString)
                DiscordWebhookUrl=$(DiscordWebhookUrl)
                SlackWebhookUrl=$(SlackWebhookUrl)
                WEBSITE_RUN_FROM_PACKAGE=1

- stage: DeployDev
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:
  - deployment: DeployToDev
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'bestrong-arm'
              appName: '$(functionAppName)-dev'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
              appSettings: |
                FileShareConnectionString=$(FileShareConnectionString)
                FormRecognizerEndpoint=$(FormRecognizerEndpoint)
                FormRecognizerKey=$(FormRecognizerKey)
                BlobStorageConnectionString=$(BlobStorageConnectionString)
                DiscordWebhookUrl=$(DiscordWebhookUrl)
                SlackWebhookUrl=$(SlackWebhookUrl) 