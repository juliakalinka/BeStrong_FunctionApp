trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.9'
  functionAppNameProd: 'prodbestrongfuncapp1'
  functionAppNameDev: 'devbestrongfuncapp1'
  resourceGroupProd: 'rg-prod'
  resourceGroupDev: 'rg-dev'

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: BuildJob
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        mkdir -p $(Build.ArtifactStagingDirectory)/function_package
        cp -r PdfOcrFunction $(Build.ArtifactStagingDirectory)/function_package/
        cp -r NotificationFunction $(Build.ArtifactStagingDirectory)/function_package/
        cp host.json requirements.txt $(Build.ArtifactStagingDirectory)/function_package/
      displayName: 'Prepare Function Package'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/function_package'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/function-app.zip'
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)/function-app.zip'
      artifact: function-package

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  jobs:
  - deployment: DeployJob
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: |
              if [[ "$(Build.SourceBranch)" == "refs/heads/main" ]]; then
                echo "##vso[task.setvariable variable=targetAppName]$(functionAppNameProd)"
                echo "##vso[task.setvariable variable=targetResourceGroup]$(resourceGroupProd)"
              else
                echo "##vso[task.setvariable variable=targetAppName]$(functionAppNameDev)"
                echo "##vso[task.setvariable variable=targetResourceGroup]$(resourceGroupDev)"
              fi
            displayName: 'Select deployment target'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'bestrong-arm'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Setting Python runtime for app: $(targetAppName)"
                az functionapp config set \
                  --name $(targetAppName) \
                  --resource-group $(targetResourceGroup) \
                  --linux-fx-version "Python|3.9"
            displayName: 'Ensure Python Runtime'

          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'bestrong-arm'
              appType: 'functionAppLinux'
              appName: '$(targetAppName)'
              package: '$(Pipeline.Workspace)/function-package/function-app.zip'
              deploymentMethod: 'auto'
              appSettings: '-FUNCTIONS_WORKER_RUNTIME python -FUNCTIONS_EXTENSION_VERSION ~4 -FileShareConnectionString "$(FileShareConnectionString)" -FormRecognizerEndpoint "$(FormRecognizerEndpoint)" -FormRecognizerKey "$(FormRecognizerKey)" -BlobStorageConnectionString "$(BlobStorageConnectionString)" -DiscordWebhookUrl "$(DiscordWebhookUrl)" -SlackWebhookUrl "$(SlackWebhookUrl)" -BUILD_ID "$(Build.BuildId)"'
            displayName: 'Deploy Azure Function'